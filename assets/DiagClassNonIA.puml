@startuml
'https://plantuml.com/class-diagram

class Overcooked {
    + List<Joueur> joueurs
    + Etat etat
}

"Overcooked" --> "Joueur" : "joueurs"
"Overcooked" --> "Etat" : "etat"

interface Movable {
    + int[] coordonnees
    + getCoordonnees(): int[]
}

interface Joueur {
    + demanderAction(): Action
}

class JoueurHumain implements Joueur {
    + demanderAction(): Action
}

class JoueurIA implements Joueur {
    + demanderAction(): Action
}

class Personnage implements Movable {
    + int[] coordonnees
    + getCoordonnees(): int[]
}

class Aliment implements Movable {
    + int[] coordonnees
    + getCoordonnees(): int[]
}

class TempsDeJeu {
    + int temps
    + int intervalTemps
    + demarrerJeu(): void
    + terminerJeu(): void
    + demarrerTour(): void
    + terminerTour(): void
}

class Etat{
    <a completer pour les donnÃ©es du jeu>
    boolean estTerminal()
    boolean equals(Etat etat)
    int hashCode()
}

class DonneesJeu {
    + lireFileDonneesJeu()
}

interface Block {
    + int[] coordonnees
    + getCoordonnees(): int[]
}
"Block" <-- "DonneesJeu" : "objetsFixes[]"
"Movable" <-- "DonneesJeu" : "objetsDeplacables[]"
"DonneesJeu" <-- "Overcooked" : "donnees"
"TempsDeJeu" <-- "DonneesJeu" : "tempsDeJeu"



@enduml